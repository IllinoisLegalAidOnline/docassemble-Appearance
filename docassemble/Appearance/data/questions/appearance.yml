metadata:
  title: Appearance
  short title: Appearance
  comment: This program helps you tell the court and the other parties that you are participating in a court case. It also makes a form to request a jury trial.
  authors:
    - Matt Newsted
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ILAO:ilao-interview-framework.yml
  - docassemble.ILAO:shared-basic-questions.yml
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - users[i].lawyer: ALIndividual
  - users[i].hand_delivery_address: ALAddress
  - other_parties: ALPeopleList.using(there_are_any=True)
  - other_parties[i].lawyer: ALIndividual
  - other_parties[i].hand_delivery_address: ALAddress
  - delivery_parties: ALPeopleList.using(there_are_any=True)
  - delivery_parties[i].lawyer: ALIndividual
  - court_list: ALCourtLoader.using(file_name='docassemble.ILAO:data/sources/il_courts.xlsx')
---
code: |
  al_form_type = 'existing_case'
  ilao_easy_form_title = "Appearance"
  ilao_easy_form_url = "https://www.illinoislegalaid.org/legal-information/appearance"
  form_name = "Appearance"
  github_user = 'IllinoisLegalAidOnline'
  github_repo_name = 'docassemble-Appearance'
  allowed_courts = ['Circuit']
---
# Road map
sections:
  - section_intro: Start
  - section_case_info: Case info
  - section_delivery: Delivery details
  - section_about_you: About you
  - section_download: Download  

---
# interview order block
mandatory: True
code: |
  nav.set_section('section_intro')
  sees_nav_bar
  snapshot_start
  efiling_pilot
  how_to_use
  set_progress(5)
  whats_next
  accept_terms
  lawsuit_information
  
  set_progress(15)
  nav.set_section('section_case_info')
  user_ask_role
  users.gather()
  set_progress(30)
  other_parties.gather()
  if in_re_check == True:
    in_re_label
  set_progress(40)
  trial_court
  case_number
  trial_with

  set_progress(60)
  nav.set_section('section_delivery')
  delivery_intro
  set_progress(70)
  for person in delivery_parties:
    if person.is_represented:
      person.lawyer.name.first
    person.address.address
    if person.knows_delivery_method:
      person.mail_delivery
      person.delivery_date

  hand_delivery_info

  set_progress(80)
  nav.set_section('section_about_you')
  users[0].address.address
  users[0].phone_number
  pronouns_none
  prefix_none
  
  e_signature

  set_progress(100)
  nav.set_section('section_download')
  forms_assembling
  refresh_delivery_bundle
  snapshot_forms
  get_docs_screen
---
code: |
  stuff_to_snapshot = {
  	'start_time': str(current_datetime().format_datetime()),
  	'started_interview': True, 
  	}

  try:
    stuff_to_snapshot['ip_address'] = device(ip=True)
  except:
    pass

  stuff_to_snapshot['zip'] = showifdef('users[0].address.zip')

  stuff_to_snapshot['downloaded_forms'] = showifdef('forms_assembling')
  
  store_variables_snapshot(
  	data=stuff_to_snapshot, persistent=True
  	)
  snapshot_interview_state = True
---
code: |
  snapshot_interview_state
  snapshot_start = True  
---
code: |
  reconsider('snapshot_interview_state')
  snapshot_forms = True
---
id: welcome
question: |
  Appearance
subquestion: |
  Welcome to Illinois Legal Aid Online's **Appearance** Easy Form.

  This program creates an *Appearance* form that tells the court and the other parties that you are participating in a court case. It also makes a *Jury Request* if you want a jury and a judge to decide your case.
  
  To learn more, read ILAO's article about [**responding to a lawsuit**](https://www.illinoislegalaid.org/node/32236).
field: sees_nav_bar
---
id: e-filing pilot
continue button field: efiling_pilot
question: |
  E-filing option
subquestion: |
  If you plan to e-file your **{Appearance}**, you can use our [**Appearance with e-filing**](  https://www.illinoislegalaid.org/legal-information/appearance-e-filing) program.
  
  **Note:** You must also file a Fee waiver at the same time to use the ILAO e-filing program.

---
id: instructions
continue button field: how_to_use
question: |
  Instructions
subquestion: |
  To use this program you will need: 

  * Names and addresses of the other parties, 
  * Names and addresses of the other parties’ lawyers, and 
  * The court case number. 

  You can find this information on other court papers you have about this case. 

  Set aside 5 to 10 minutes to finish this program. You can log in and save your work to return to later. 
 
  ${ collapse_template(help_example) }  

  Click on **{green words}** to learn what they mean. Some pages have a question mark in a circle ${ fa_icon("question-circle", color_css="#0dcaf0" ) } that helps explain things.
---
template: help_example
subject: |
  **You can click sections like this to show more information.**
content: |  
  This is an example of help. Click again to hide.
---
id: whats next
continue button field: whats_next
question: |
  After you finish this program
subquestion: |
  After you download your **{Appearance}** and **{Jury Request}**, you must file them with the court. This program does not file your forms for you.
  
  Read the "How to File an Appearance or Request a Jury" instructions you can download at the end of this program. 
---
terms:
  - "Jury Request": |
      A Jury Request tells the court you want a trial with a judge and a jury. It is also called a Jury demand.
---
template: get_legal_help
subject: |
  **What if I need legal advice?**
content: |  
  If you have questions or concerns about your legal problem and want legal advice you should talk to a lawyer.
  
  Use [**Get Legal Help**](https://www.illinoislegalaid.org/get-legal-help) to find free or low-cost legal services in your area.
---
id: lawsuit information
continue button field: lawsuit_information
question: |
  Lawsuit information
subquestion: |
  If you received a Complaint and Summons, you have been sued. You need to tell the court you want to participate in your case. In some cases, you need to file an **{Answer}** to respond to the Complaint.
  
  If you do not respond, you can be found in default, and the court can rule against you. In some cases, like evictions, you do not need to file a written **{Appearance}**. Instead, you can attend your court hearing.
  
  To learn more, read ILAO's article about [**responding to a lawsuit**](https://www.illinoislegalaid.org/node/32236).
  
  ${ collapse_template(started_lawsuit_help) }  
  
  If you would like help finding free or low-cost legal services in your area, use [**Get Legal Help**](https://www.illinoislegalaid.org/get-legal-help).
---
template: started_lawsuit_help
subject: |
  **What if I started the lawsuit?**
content: |  
  You can also file an Appearance if you started the lawsuit. Usually, you only need to file an Appearance if you had a lawyer in the case before, but now you want to represent yourself.
---
id: user name
sets:
    - users[0].name.first
    - users[0].name.last
    - users[0].name.middle
    - users[0].name.suffix
question:  |
  What is your name?
fields:
  - code: |
      users[0].name_fields()
---
id: in re check
question: |
 Does the court case have the words "**In re:**" in the name?
subquestion: |
  Look at the name of the case at the top of the court papers. "In re" is often used in probate, guardianship, and some family law cases. For example, a probate case regarding Jane Doe’s estate might be called "In re: Estate of Jane Doe."
  
  **Note:** If the court papers say "In re:" but also list the names of people in the case, you can select **No**. For example, if the case title is "In re: Marriage of Julia Smith and Tony Smith," the names you already entered will be put on your forms. 
fields:
  - no label: in_re_check
    datatype: yesnoradio
---
id: in re label
question: |
  What does it say after "**In re:**" on the court papers?
subquestion: |
  For example, the case could be called "In re: The Will of Elena Black."
fields:
  - In re:: in_re_label
    maxlength: 50
---
id: any other users
question: |
  % if al_form_type in ['starts_case','existing_case','appeal']:
  Is anyone else on your side of this case?
  % else:
  Is anyone else adding their name to this form with you?
  % endif
subquestion: |
  % if user_ask_role == 'plaintiff':
  You said you are the **Plaintiff** or the **Petitioner.** The other people on your side of the case would be co-plaintiffs or co-petitioners.
  % else:
  You said you are the **Defendant** or the **Respondent.** The other people on your side of the case would be co-defendants or co-respondents.
  % endif
    
  % if len(users.elements) > 1:  
  So far you have told us about ${comma_and_list(users.complete_elements().full_names())}.
  % endif  
fields:
  - "Anyone else?": users.there_is_another
    datatype: yesnoradio
---
template: other_parties_help
subject: |
  **How do I know if there are others?**
content: |  
    % if user_ask_role == 'plaintiff':
    You said you are the **Plaintiff** or the **Petitioner.** The other people on your side of the case would be co-plaintiffs or co-petitioners.
    % else:
    You said you are the **Defendant** or the **Respondent.** The other people on your side of the case would be co-defendants or co-respondents.
    % endif
---
depends on:
  - user_started_case
sets:
  - users[i].name.first
id: other users names
question: |
  % if al_form_type in ['starts_case','existing_case','appeal']:
  What is the name of the ${ ordinal(i) } person who is part of the case with you?
  % else:
  What is the name of the ${ ordinal(i) } person who is adding their name to
  this form with you?
  % endif
subquestion: |
  ${ collapse_template(long_name_help) }
fields:
  - code: |
      users[i].name_fields(person_or_business='unsure')
---
template: long_name_help
subject: |
  **What if I need more space?**
content: |
  If the person has a long name like "Jane Smith, Director of Housing," select **Business or organization**. You can then enter the full name and title.
---
# modified other opposing parties question
# add to basic questions
id: any other opposing parties
question: |
  % if users==plaintiffs:
  Is there another **defendant** or **respondent** in this case?
  % else:
  Is there another **plaintiff** or **petitioner** in this case?
  % endif
subquestion: |
  % if user_ask_role == 'plaintiff':
  You said you are the **Plaintiff** or the **Petitioner.** The people on the other side of the case would be defendants or respondents.
  % else:
  You said you are the **Defendant** or the **Respondent.** The people on the other side of the case would be plaintiffs or petitioners.
  % endif

  % if len(other_parties.elements) >= 1:  
  So far you have told us about ${comma_and_list(other_parties.complete_elements().full_names())}.
  % endif
fields:
  - "Anyone else?": other_parties.there_is_another
    datatype: yesnoradio
---
depends on:
  - user_started_case
sets:
  - other_parties[i].name.first
id: names of opposing parties
question: |
  % if users==plaintiffs:
  Name of ${ ordinal(i) } **defendant** or **respondent** in this case
  % else:
  Name of ${ ordinal(i) } **plaintiff** or **petitioner** in this case
  % endif
subquestion: |
  ${ collapse_template(long_name_help) }
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='unsure')
---
id: trial court county
continue button field: case_county
question: |
  In which county was this case filed?
subquestion: |
  This should be listed near the top on your court papers.
fields:
  - no label: trial_court_index
    datatype: integer
    code: |
      court_county_lookup()
---
code: |
  def court_county_lookup(lowercase=False):
    all_court_counties = court_list._load_courts()['address_county'].items()
    filtered_courts = [(-1, "cook")] if lowercase else [(-1, "Cook")]
    for court in all_court_counties:
      if court[1] != "Cook":
        court_name = court[1].lower() if lowercase else court[1]
        filtered_courts.append((court[0],court_name))
    return sorted( filtered_courts, key=lambda y: y[1])
---
depends on:
  - trial_court_index
code: |
  if trial_court_index == -1:
    trial_court = court_list.as_court('trial_court', 15)
    trial_court.address.county = "Cook"
  else:
    trial_court = court_list.as_court('trial_court', trial_court_index)
---
id: case number
question: |
  What is the case number?
subquestion: |
  ${ collapse_template(case_number_help) }  
fields:
  - Case number: case_number
    maxlength: 19
---
template: case_number_help
subject: |
  **Where can I find this?**
content: |  
  The case number should be on your court papers. Look at the Complaint or Petition, or the Summons if you received one. It is usually in the top-right part of the first page.
  
  If you started the case, the court clerk should have given you the case number.
  
  In this example, the case number is **2022 EXAMPLE 123**.
  
  [FILE case_number_example.png, 100%, Summons form showing case number]
---
id: trial by jury
question: |
  Who do you want to decide your case?
subquestion: |
  Jury trials are more complicated and can take more time than if the case is decided by the judge alone.

  ${ collapse_template(jury_trial_help) }  

  **Note:** You do not have a right to a jury trial in every case. There can be an additional fee for a jury trial.

  To learn more, read ILAO's article about [**jury trials and judge trials**](https://www.illinoislegalaid.org/node/178441).
field: trial_with
choices:
  - A judge: Judge only
  - A judge and a 6-person jury: Judge and six-person jury
  - A judge and a 12-person jury: Judge and twelve-person jury
---
template: jury_trial_help
subject: |
  **What's the difference between a 6-person jury and a 12-person jury?**
content: |  
  The number of people on the jury can affect the cost. Usually, a 12-person jury is more expensive. Ask your local circuit clerk about the fees.
  
  In Illinois, different kinds of cases allow different size juries. A 6-person jury or a 12-person jury might not be an option for your type of court case. Contact your local circuit clerk to find out what size jury is available in your case.
  
  Use the [**Illinois Court's website**](https://www.illinoiscourts.gov/courts-directory/interactive-map/by-court-type) to look up your local circuit clerk. 
---
id: e-filing a jury demand
continue button field: jury_demand_filing_info
question: |
  E-filing a jury demand
subquestion: |
  If you are e-filing your forms, you may need to e-file the *Appearance* form as two separate documents: once as an Appearance and once as a Jury Demand.
  
  Check with [**Illinois Court Help**](https://ilcourthelp.gov) or call (833) 411-1121. You can also ask your local circuit clerk.
 
---
id: your contact information
question: |
  What is your contact information?
subquestion: |
  The court or other parties might need to contact you about this case.

  **This information will appear on your court forms.**
  
  If you do not want to list a phone number on your forms, leave it blank.

  If you have an email address, you must list it. Be sure to check your email daily, otherwise you may miss important court documents or information about your case.

  ${ collapse_template(contact_info_help) }  
fields:  
  - Phone number: users[0].phone_number
    datatype: al_international_phone
    required: False
  - label: |
      Do you have an email address?
    field: users[0].has_email_address      
    datatype: yesnoradio
  - note: |
      This email address will appear on your court forms. Be sure to check 
      this email daily, otherwise you may miss important information about 
      your case.
    show if:
      variable: users[0].has_email_address
      is: True
  - Email address: users[0].email    
    datatype: email
    show if: 
      variable: users[0].has_email_address
      is: True
---
template: contact_info_help
subject: |
  **What if I don't want to list my email address?**
content: |  
  If you do not want to enter your personal email address, you can create a new email account to get email about your case.
  
  To make a new email account try one of these email services:
  
  * [**Gmail**](https://accounts.google.com/SignUp)
  * [**Outlook**](https://outlook.live.com/owa/?nlp=1&signup=1)
  * [**Yahoo**](https://login.yahoo.com/account/create?.lang=en-US&.intl=us)
---
id: pronouns
question: |
  What pronouns do you want the court to use?
subquestion: |
  On the *Appearance*, you can tell the court which pronouns you use.
fields:
  - I prefer not to answer.: pronouns_none
    datatype: yesno
    disable others: True
  - Pronouns (optional): pronouns
    datatype: checkboxes
    none of the above: False
    required: False
    choices:
      - She/her
      - He/him
      - They/them
      - Other
  - Other pronouns: other_pronouns
    maxlength: 40
    show if:
      variable: pronouns["Other"]
      is: True
validation code: |
  if pronouns_none == False and pronouns.all_false():
    validation_error("Please select at least one.", field="pronouns")
---
id: prefix
question: |
  What prefix do you want the court to use?
subquestion: |
  On the *Appearance*, you can tell the court what prefix you use.
fields:
  - I prefer not to answer.: prefix_none
    datatype: yesno
    disable others: True
  - Prefix (optional): prefix
    datatype: checkboxes
    none of the above: False
    required: False
    choices:
      - Ms.
      - Mrs.
      - Mr.
      - Mx.
      - Other
  - Other prefix: other_prefix
    maxlength: 10
    show if:
      variable: prefix["Other"]
      is: True
validation code: |
  if prefix_none == False and prefix.all_false():
    validation_error("Please select at least one.", field="prefix")
---
id: e-signature
question: |
  Do you want to add your e-signature to your forms?
subquestion: |
  This program can put “**/s/ ${users[0].name.full(middle='full')}**” where you would sign your name. The court will accept this as your signature.

  If you do not add your **{e-signature}**, you must sign your paper forms before you file and deliver them.

  <div class="alert alert-info ilao-info" role="alert">
    <h6 class="alert-heading">What it means to sign your forms</h6>
    <p>By signing your court forms, you are certifying that:</p>
    <p><ul>
      <li>You read the document,</li>
      <li>You believe it to be true and correct, and</li>
      <li>You are not filing it for an improper purpose.</li>
    </ul></p>
    <p>See the <a href="https://ilcourtsaudio.blob.core.windows.net/antilles-resources/resources/9ce1fce9-895f-463e-b87d-f9b7631f8fde/Rule%20137.pdf"><b>Illinois Supreme Court Rule 137</b></a> for more information.</p>
    <p>By signing the Proof of Delivery section of your forms, you are certifying that:</p>
    <p><ul>
      <li>Everything on the forms is true and correct, and</li>
      <li>You understand that making a false statement on the form is perjury, which can result in criminal penalties.</li>
    </ul></p>
  <p>See the <a href="https://www.ilga.gov/legislation/ilcs/documents/073500050k1-109.htm"><b>Code of Civil Procedure, 735 ILCS 5/1-109</b></a> for more information.</p>
  </div>
fields:
  - "Add e-signature?": e_signature
    datatype: yesnoradio
terms:
  - "e-signature": |
      An e-signature is an electronic signature. It is a digital version of a signature that has the same effect as a hand-written signature. 
---
reconsider: True
code: |
  delivery_parties = DAList("delivery_parties", elements = other_parties + users[1:])
# changed order to keep it a DAList
---
id: extra delivery forms required
continue button field: extra_delivery_forms
question: |
  Additional Proof of Delivery
subquestion: |
  This program makes the Proof of Delivery forms for up to 8 other parties.
  
  You will need to fill out *Additional Proof of Delivery* forms for ${comma_and_list(delivery_parties[8:])}. 
  
  You can download blank *Additional Proof of Delivery* forms at the end of this program.
---
id: delivery intro
continue button field: delivery_intro
question: |
  Send your forms to all other parties
subquestion: |
  These are the other parties in this case: ${comma_and_list(delivery_parties)}.

  You must send a copy of your forms to each of them.

  If someone in the case has a lawyer, send them to their lawyer.
---
id: has lawyer
generic object: ALIndividual
question: |
  Does ${ x.name.full(middle="full") } have a lawyer in this case?
field: x.is_represented
choices:
  - Yes: True
  - No: False
  - I don't know.: null 
# note: null will be None in review screen
---
id: add lawyer
generic object: ALIndividual
question: |
  Who is  ${ x.name.full(middle="full") }'s lawyer?
fields:
  - First name: x.lawyer.name.first
  - Middle name: x.lawyer.name.middle
    required: False
  - Last name: x.lawyer.name.last
  - Suffix: x.lawyer.name.suffix
    code: |
      name_suffix()
    required: False  
---
id: delivery party address
sets:
  - x.address.address
  - x.address.city
  - x.address.zip
generic object: ALIndividual
question: |
  % if x.is_represented:
  What is ${ x.lawyer.name.full(middle="full") }'s address?
  % else:
  What is ${ x.name.full(middle="full") }'s address?
  % endif
fields:
  - Street address: x.address.address
    address autocomplete: True
  - Address line 2: x.address.unit
    required: False
  - City: x.address.city
  - State: x.address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: x.address.zip
---
#added to remove same as / someplace else default in ql_baseline.yml
id: users delivery party address
sets:
  - users[i].address.address
  - users[i].address.city
  - users[i].address.zip
generic object: ALIndividual
question: |
  % if users[i].is_represented:
  What is ${ users[i].lawyer.name.full(middle="full") }'s address?
  % else:
  What is ${ users[i].name.full(middle="full") }'s address?
  % endif
fields:
  - Street address: users[i].address.address
    address autocomplete: True
  - Address line 2: users[i].address.unit
    required: False
  - City: users[i].address.city
  - State: users[i].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: users[i].address.zip

---
id: knows delivery method
generic object: ALIndividual
question: |
  % if x.is_represented:
  Do you know **how** and **when** you will send your forms to ${ x.lawyer.name.full(middle="full") }?
  % else:
  Do you know **how** and **when** you will send your forms to ${ x.name.full(middle="full") }?
  % endif
subquestion: |
  ${ collapse_template(delivery_method_help) }  

  For best results, complete the Proof of Delivery section and send the forms today.

  If you do not know this now, you can add it to the Proof of Delivery section of your forms later.
field: x.knows_delivery_method
choices:
  - Yes: True
  - No. I do not know this now. I will add it to my forms later.: False
---
template: delivery_method_help
subject: |
  **What are my delivery options?**
content: |  
  You can deliver the forms by:
  
  * The court's **{e-filing system}**,
  * Email,
  * US mail or a delivery company (like UPS or FedEx), or
  * Hand delivery to the party, the party's family member over 13 at their residence, the party's lawyer, or their lawyer's office.

  If the other party listed an email address on the court documents, you must send the forms to them by email or through the e-filing system. You may use US mail or a delivery company, or hand delivery if you or the other party **does not** have an email address.
  
  If you are in a prison or jail, you can deliver by mail.
terms:
  - e-filing system: |
      The court's e-filing system could be any approved electronic filing service provider (EFSP).
---
id: user party delivery method
#changed from generic object to users to allow for changing answers via Back
#generic object: ALIndividual
question: |
  % if users[i].is_represented:
  How will you send your forms to ${ users[i].lawyer.name.full(middle="full") }?
  % else:
  How will you send your forms to ${ users[i].name.full(middle="full") }?
  % endif
subquestion: |  
  If the other party listed an email address on the court documents, you must send the forms to them by email or through the e-filing system. You may use US mail or a delivery company, or hand delivery if you or the other party **does not** have an email address. If you are in a prison or jail, you can deliver by mail.

  For best results, complete the Proof of Delivery section and send the forms today.

  **Note:** If you do not know this now, be sure to add it to the Proof of Delivery section of your forms later.

  ${ collapse_template(efiling_help) }
fields:
  - E-filing system: users[i].efm_delivery
    datatype: yesnowide
    help: |
      The court's e-filing system could be any approved electronic filing service provider (EFSP).
  - Email: users[i].email_delivery
    datatype: yesnowide
  - Email address (for e-filing system or email delivery): users[i].delivery_email
    datatype: email
    js show if: 
      val("users[i].efm_delivery") == true || val("users[i].email_delivery") == true
    required: False
  - US mail or delivery company (like UPS or FedEx): users[i].mail_delivery
    datatype: yesnowide
  - City of mailbox or delivery company: users[i].delivery_mail_city
    maxlength: 30
    show if: 
      variable: users[i].mail_delivery
      is: True
    required: False
  - State of mailbox or delivery company: users[i].delivery_mail_state
    code: |
      states_list()
    default: IL
    show if: 
      variable: users[i].mail_delivery
      is: True
    required: False
  - Hand delivery: users[i].hand_delivery
    datatype: yesnowide
    help: |
      You can only deliver to the party, the party's family member over 13 at their residence, the party's lawyer, or their lawyer's office.
  - Street address: users[i].hand_delivery_address.address
    address autocomplete: True
    show if: 
      variable: users[i].hand_delivery
      is: True
    required: False
  - Address line 2: users[i].hand_delivery_address.unit
    show if: 
      variable: users[i].hand_delivery
      is: True
    required: False
  - City: users[i].hand_delivery_address.city
    show if: 
      variable: users[i].hand_delivery
      is: True
    required: False
  - State: users[i].hand_delivery_address.state
    code: |
      states_list()
    default: IL      
    show if: 
      variable: users[i].hand_delivery
      is: True
    required: False
  - ZIP code: users[i].hand_delivery_address.zip
    show if: 
      variable: users[i].hand_delivery
      is: True
    required: False
  - By mail from a prison or jail: users[i].jail_delivery
    datatype: yesnowide
  - Name of prison or jail: users[i].delivery_jail_name
    maxlength: 40
    show if: 
      variable: users[i].jail_delivery
      is: True
    required: False

---
template: efiling_help
subject: |
  **What if I need help?**
content: |  
  If you need help delivering by email or using the e-filing service provider, you can visit a [**Legal Self-Help Center**](https://www.illinoislegalaid.org/get-legal-help/lshc-directory) or you can call or text [**Illinois Court Help**](https://www.ilcourthelp.gov) at 833-411-1121.
---
id: other party delivery method
# generic object: ALIndividual
#changed from generic object to other_parties to allow for changing answers via Back
question: |
  % if other_parties[i].is_represented:
  How will you send your forms to ${ other_parties[i].lawyer.name.full(middle="full") }?
  % else:
  How will you send your forms to ${ other_parties[i].name.full(middle="full") }?
  % endif
subquestion: |  
  If the other party listed an email address on the court documents, you must send the forms to them by email or through the e-filing system. You may use US mail or a delivery company, or hand delivery if you or the other party **does not** have an email address. If you are in a prison or jail, you can deliver by mail.

  For best results, complete the Proof of Delivery section and send the forms today.

  **Note:** If you do not know this now, be sure to add it to the Proof of Delivery section of your forms later.

  ${ collapse_template(efiling_help) }  
fields:
  - E-filing system: other_parties[i].efm_delivery
    datatype: yesnowide
    help: |
      The court's e-filing system could be any approved electronic filing service provider (EFSP).
  - Email: other_parties[i].email_delivery
    datatype: yesnowide
  - Email address (for e-filing system or email delivery): other_parties[i].delivery_email
    datatype: email
    js show if: 
      val("other_parties[i].efm_delivery") == true || val("other_parties[i].email_delivery") == true
    required: False
  - US mail or delivery company (like UPS or FedEx): other_parties[i].mail_delivery
    datatype: yesnowide
  - City of mailbox or delivery company: other_parties[i].delivery_mail_city
    maxlength: 30
    show if: 
      variable: other_parties[i].mail_delivery
      is: True
    required: False
  - State of mailbox or delivery company: other_parties[i].delivery_mail_state
    code: |
      states_list()
    default: IL
    show if: 
      variable: other_parties[i].mail_delivery
      is: True
    required: False
  - Hand delivery: other_parties[i].hand_delivery
    datatype: yesnowide
    help: |
      You can only deliver to the party, the party's family member over 13 at their residence, the party's lawyer, or their lawyer's office.
  - Street address: other_parties[i].hand_delivery_address.address
    address autocomplete: True
    show if: 
      variable: other_parties[i].hand_delivery
      is: True
    required: False
  - Address line 2: other_parties[i].hand_delivery_address.unit
    show if: 
      variable: other_parties[i].hand_delivery
      is: True
    required: False
  - City: other_parties[i].hand_delivery_address.city
    show if: 
      variable: other_parties[i].hand_delivery
      is: True
    required: False
  - State: other_parties[i].hand_delivery_address.state
    code: |
      states_list()
    default: IL      
    show if: 
      variable: other_parties[i].hand_delivery
      is: True
    required: False
  - ZIP code: other_parties[i].hand_delivery_address.zip
    show if: 
      variable: other_parties[i].hand_delivery
      is: True
    required: False
  - By mail from a prison or jail: other_parties[i].jail_delivery
    datatype: yesnowide
  - Name of prison or jail: other_parties[i].delivery_jail_name
    maxlength: 40
    show if: 
      variable: other_parties[i].jail_delivery
      is: True
    required: False
---
id: delivery time
generic object: ALIndividual
question: |
  % if x.is_represented:
  When will you send your forms to ${ x.lawyer.name.full(middle="full") }?
  % else:
  When will you send your forms to ${ x.name.full(middle="full") }?
  % endif
subquestion: |
  For best results, complete the Proof of Delivery section and send the forms today.

  **Note:** If you do not know this now, be sure to add it to the Proof of Delivery section of your forms later.
fields:
  - Date: x.delivery_date
    datatype: date
    required: False
    min: ${ today().format("yyyy-MM-dd") }
    max: ${ today().plus(years=1) }
  - Time: x.delivery_time
    datatype: time
    required: False
validation code: |
  if (not showifdef('x.delivery_date')):
    x.knows_delivery_date = False
  else:
    x.knows_delivery_date = True
  if (not showifdef('x.delivery_time')):
    x.knows_delivery_time = False
  else:
    x.knows_delivery_time = True

---
id: hand delivery info
continue button field: hand_delivery_info
question: |
  Check your Proof of Delivery
subquestion: |
  **Don't forget!** Make sure you review and complete the Proof of Delivery section of your forms. 
  
  [FILE proof_of_delivery_snip_2024.png, 100%, Proof of Delivery section of forms]

  **Instructions when delivering your forms by hand:**

  * If a party in your case does not have a lawyer, you can hand-deliver the forms to them or to a family member who is 13 or older at their home.
  * If they do have a lawyer, you can hand-deliver the forms to the lawyer or to the lawyer's office.
---
id: forms assembling
continue button field: forms_assembling
question: |
  Almost done
subquestion: |
  After you click **Next**, it may take a few moments to finish making your forms.
  
  ###### You do not need to refresh your screen. Hang in there!
  
  [NEWLINE]
---
id: get docs screen
event: get_docs_screen
question: |
  Download
subquestion: |
  Your forms are ready. View and download your forms below. Click **Make changes** to fix any mistakes.

  This program does not file your forms with the court or deliver them to other parties in your case. You will need to do this yourself. Learn about [**e-filing in Illinois**](https://www.illinoiscourts.gov/eservices/information-for-filers-without-lawyers).

  ${ action_button_html(url_action('review_answers'), label=':edit: Make changes', color='success', size="md") }
  
  ${ al_user_bundle.download_list_html() }

  [NEWLINE]

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

  **Note:** This program does not file your forms with the court or deliver them to other parties in your case. Learn about [**e-filing in Illinois**](https://www.illinoiscourts.gov/eservices/information-for-filers-without-lawyers).
  
  Thank you for using ILAO Easy Forms!
under: |
  % if not user_logged_in():
  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} **Sign-in**](${url_of('login', next=interview_url())}) or [**create**](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
  % endif 

  &nbsp;
  ${ action_button_html(interview_url(i="docassemble.ILAO:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=user_info().question_id, easy_form_variable=user_info().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
generic object: ALDocumentBundle
template: x.send_email_template
subject: |
  Appearance and Jury Request forms
content: |
  Your forms are attached.
  
  Thanks for using ILAO Easy Forms!
  
  [Illinois Legal Aid Online](https://www.illinoislegalaid.org)
---
objects:
  - appearance_attachment: ALDocument.using(title="Appearance", filename="appearance.pdf", has_addendum=False)
  - appearance_instructions: ALDocument.using(title="Instructions", filename="instructions.pdf", has_addendum=False)
  - jury_request: ALDocument.using(title="Jury Request", filename="jury_request.pdf", has_addendum=False)
---
#This needs to be a generic object because the delivery parties list entries point to entries in other lists.
generic object: ALIndividual
objects:
  - x.additional_proof: ALDocument.using(title="Additional Proof of Delivery", filename="additional_proof_of_delivery.pdf", has_addendum=False)
---
objects:
  - additional_delivery_bundle: ALDocumentBundle.using(elements=[], title= "Additional Proof of Delivery", filename="additional_proof_of_delivery.pdf", has_addendum=False)
---
reconsider: True
code: |
  #deliveries_to_bundle will be used as the elements for the additional_delivery_bundle object created in the above block. This is its initial definition for the Appearance.
  deliveries_to_bundle = []
  additional_delivery_bundle.enabled = False

  #enumerate allows us to reference the index in a for loop. This for loop appends each additional proof template to the deliveries_to_bundle object and sets the enabled trait for those templates.
  for index, party in enumerate(delivery_parties):
    #If the index is 0 or 1, the party is included on the motion and notice forms, and thus does not need to be added to additional proof of delivery
    if index == 0 or index == 1:
      party.additional_proof.enabled = False
    #Because the additional delivery form can list two parties, we don't need a form for each delivery party beyond the first two. Instead, we only append party.additional_proof if party's index is an even number, as a party with an odd number will be included on the previous party.additional_proof
    elif (index % 2) == 0:
      party.additional_proof.enabled = True
      additional_delivery_bundle.enabled = True
      #We only need to append the party.additional proof objects that we include.
      deliveries_to_bundle.append(party.additional_proof)
      #This if statement prevents an out of index range error. If we created the party.second_person without it, an out of index range would occur if party is the last entry in the delivery_parties list.
      if (index + 1) < delivery_parties.number_gathered():
        #This line creates an object associated with party that points to the item immediately after party in delivery_parties. Why? So we can refer to it in the party.additional_delivery attachment block even though there we can't refer to the index as we do in this for loop.
        party.second_person = delivery_parties[index + 1]
    #This else statement should catch all parties with an index divisible by 2, excluding index 0.
    else:
      party.additional_proof.enabled = False
 
  additional_delivery_bundle.elements = deliveries_to_bundle
  refresh_delivery_bundle = True

---
reconsider: True
code: |
  appearance_attachment.enabled = True
  appearance_instructions.enabled = True
    
  if trial_with == "Judge only":
    jury_request.enabled = False
    jury_request_bundle.enabled = False
  else:
    jury_request.enabled = True
    jury_request_bundle.enabled = True

---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[appearance_instructions, appearance_single_pdf_bundle, jury_request_bundle ], filename="appearance.pdf", title="All forms")
  - al_court_bundle: ALDocumentBundle.using(elements=[appearance_single_pdf_bundle, jury_request_bundle], filename="appearance.pdf", title="Appearance")
---
objects:
  - appearance_single_pdf_bundle: ALDocumentBundle.using(elements=[appearance_attachment, additional_delivery_bundle], filename="appearance.pdf", title="Appearance", enabled=True)
  - jury_request_bundle: ALDocumentBundle.using(elements=[jury_request, additional_delivery_bundle], filename="jury_request.pdf", title="Jury Request")
---
attachment:
  variable name: appearance_instructions[i]
  name: appearance_instructions
  filename: appearance-instructions
  skip undefined: True
  editable: False
  pdf template file: appearance_instructions.pdf
  fields:
      - "fake": ${ "" }
---
attachment:
  variable name: appearance_attachment[i]
  name: appearance_attachment
  filename: appearance
  skip undefined: True
  editable: False
  pdf template file: appearance.pdf
  fields:
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "plaintiffs": |
          % if in_re_check:
          ${ in_re_label }
          % else:
          % if user_ask_role == 'plaintiff':
          % if users.number() > 1:
          ${ users[0].name.full(middle="full") }, et al.
          % else:
          ${ users[0].name.full(middle="full") }
          % endif
          % else:
          % if other_parties.number() > 1:
          ${ other_parties[0].name.full(middle="full") }, et al.
          % else:
          ${ other_parties[0].name.full(middle="full") }
          % endif
          % endif
          % endif
      
      - "defendants": |
          % if in_re_check:
          ${ "" }
          % else:
          % if user_ask_role == 'plaintiff':
          ${ other_parties.full_names() } 
          % else:
          ${ users.full_names() }
          % endif
          % endif

      - "user__1": ${ users[0].name.full(middle="full") }
      - "user__2": ${ users[0].name.full(middle="full") }
      - "user__3": ${ users[0].name.full(middle="full") }
      - "user_mail_address_one_line__1": ${ users[0].address.on_one_line(bare=True) }
      - "user_mail_address_one_line__2": ${ users[0].address.on_one_line(bare=True) }
      - "user_phone_number__1": ${ phone_number_formatted(users[0].phone_number) }
      - "user_phone_number__2": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].has_email_address else '' }
      - "user_email__2": ${ users[0].email if users[0].has_email_address else '' }
      - "case_number__1": ${ case_number }
      - "case_number__2": ${ case_number }
      - "case_number__3": ${ case_number }
      - "case_number__4": ${ case_number }
      
      - "e_sign_name__1": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "e_sign_name__2": ${ users[0].name.full(middle="full") if e_signature else '' }
      
      - "he_him": ${ True if pronouns['He/him'] else '' }
      - "she_her": ${ True if pronouns['She/her'] else '' }
      - "they_them": ${ True if pronouns['They/them'] else '' }
      - "other_pronouns_cb": ${ True if pronouns['Other'] else '' }
      - "other_pronouns": ${ other_pronouns if pronouns['Other'] else '' }
      - "mr": ${ True if prefix['Mr.'] else '' }
      - "ms": ${ True if prefix['Ms.'] else '' }
      - "mrs": ${ True if prefix['Mrs.'] else '' }
      - "mx": ${ True if prefix['Mx.'] else '' }
      - "other_prefix_cb": ${ True if prefix['Other'] else '' }
      - "other_prefix": ${ other_prefix if prefix['Other'] else '' }

      - "delivery_party1_name_full": | 
          % if delivery_parties[0].is_represented:
          ${ delivery_parties[0].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[0].name.full(middle="full") })
          % else:
          ${ delivery_parties[0].name.full(middle="full") }
          % endif
      - "delivery_party1_mail_address_on_one_line": ${ delivery_parties[0].address.on_one_line(bare=True) }
      - "delivery_party1_email": ${ delivery_parties[0].delivery_email if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_hand_yes": ${ delivery_parties[0].hand_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_mail_yes": ${ delivery_parties[0].mail_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_efm_yes": ${ delivery_parties[0].efm_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_email_yes": ${ delivery_parties[0].email_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "delivery_party1_date": ${ delivery_parties[0].delivery_date if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_date else '' }
      - "delivery_party1_time": ${ format_time(delivery_parties[0].delivery_time, format='h:mm a') if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_time else '' }
      
      - "is_delivery_party1_electronic": ${ True if delivery_parties[0].knows_delivery_method and ( delivery_parties[0].efm_delivery or delivery_parties[0].email_delivery ) else '' }
      - "is_delivery_party1_not_electronic": ${ True if delivery_parties[0].knows_delivery_method and ( delivery_parties[0].mail_delivery or delivery_parties[0].hand_delivery or delivery_parties[0].jail_delivery ) else '' }
      - "delivery_party1_mail_city": ${ delivery_parties[0].delivery_mail_city if delivery_parties[0].knows_delivery_method and delivery_parties[0].mail_delivery else '' }
      - "delivery_party1_mail_state": ${ state_name(delivery_parties[0].delivery_mail_state) if delivery_parties[0].knows_delivery_method and delivery_parties[0].mail_delivery else '' }
      - "delivery_party1_hand_address": ${ delivery_parties[0].hand_delivery_address.on_one_line(bare=True) if delivery_parties[0].knows_delivery_method and delivery_parties[0].hand_delivery else '' }
      - "is_delivery_party1_jail_yes": ${ True if delivery_parties[0].knows_delivery_method and delivery_parties[0].jail_delivery else '' }
      - "delivery_party1_jail_name": ${ delivery_parties[0].delivery_jail_name if delivery_parties[0].knows_delivery_method and delivery_parties[0].jail_delivery else '' }
      - "is_delivery_party1_end": ${ delivery_parties.number() == 1 }
      - "is_delivery_party2": ${ delivery_parties.number() > 1 }

      - "delivery_party2_name_full": | 
          % if delivery_parties[1].is_represented:
          ${ delivery_parties[1].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[1].name.full(middle="full") })
          % else:
          ${ delivery_parties[1].name.full(middle="full") }
          % endif
      - "delivery_party2_mail_address_on_one_line": ${ delivery_parties[1].address.on_one_line(bare=True) }
      - "delivery_party2_email": ${ delivery_parties[1].delivery_email if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_hand_yes": ${ delivery_parties[1].hand_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_mail_yes": ${ delivery_parties[1].mail_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_efm_yes": ${ delivery_parties[1].efm_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_email_yes": ${ delivery_parties[1].email_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "delivery_party2_date": ${ delivery_parties[1].delivery_date if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_date else '' }
      - "delivery_party2_time": ${ format_time(delivery_parties[1].delivery_time, format='h:mm a') if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_time else '' }
      
      - "is_delivery_party2_electronic": ${ True if delivery_parties[1].knows_delivery_method and ( delivery_parties[1].efm_delivery or delivery_parties[1].email_delivery ) else '' }
      - "is_delivery_party2_not_electronic": ${ True if delivery_parties[1].knows_delivery_method and ( delivery_parties[1].mail_delivery or delivery_parties[1].hand_delivery or delivery_parties[1].jail_delivery ) else '' }
      - "delivery_party2_mail_city": ${ delivery_parties[1].delivery_mail_city if delivery_parties[1].knows_delivery_method and delivery_parties[1].mail_delivery else '' }
      - "delivery_party2_mail_state": ${ state_name(delivery_parties[1].delivery_mail_state) if delivery_parties[1].knows_delivery_method and delivery_parties[1].mail_delivery else '' }
      - "delivery_party2_hand_address": ${ delivery_parties[1].hand_delivery_address.on_one_line(bare=True) if delivery_parties[1].knows_delivery_method and delivery_parties[1].hand_delivery else '' }
      - "is_delivery_party2_jail_yes": ${ True if delivery_parties[1].knows_delivery_method and delivery_parties[1].jail_delivery else '' }
      - "delivery_party2_jail_name": ${ delivery_parties[1].delivery_jail_name if delivery_parties[1].knows_delivery_method and delivery_parties[1].jail_delivery else '' }

      - "is_additional_proof_delivery_yes": ${ delivery_parties.number() > 2 }
---
generic object: ALIndividual
attachment:
  variable name: x.additional_proof[i]
  name: additional_proof
  filename: additional_proof
  skip undefined: True
  editable: False
  pdf template file: additional_proof_of_delivery.pdf
  fields:
      - "user__1": ${ users[0].name.full(middle="full") }
      - "user_mail_address_one_line__1": ${ users[0].address.on_one_line(bare=True) }
      - "user_phone_number__1": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].has_email_address else '' }
      - "case_number__1": ${ case_number }
      - "e_sign_name__1": ${ users[0].name.full(middle="full") if e_signature else '' }

      - "delivery_party1_name_full": | 
          % if x.is_represented:
          ${ x.lawyer.name.full(middle="full") }, (lawyer for ${ x.name.full(middle="full") })
          % else:
          ${ x.name.full(middle="full") }
          % endif
      - "delivery_party1_mail_address_on_one_line": ${ x.address.on_one_line(bare=True) }
      - "delivery_party1_email": ${ x.delivery_email if x.knows_delivery_method else '' }
      - "is_delivery_party1_hand_yes": ${ x.hand_delivery if x.knows_delivery_method else '' }
      - "is_delivery_party1_mail_yes": ${ x.mail_delivery if x.knows_delivery_method else '' }
      - "is_delivery_party1_efm_yes": ${ x.efm_delivery if x.knows_delivery_method else '' }
      - "is_delivery_party1_email_yes": ${ x.email_delivery if x.knows_delivery_method else '' }
      - "delivery_party1_date": ${ x.delivery_date if x.knows_delivery_method and x.knows_delivery_date else '' }
      - "delivery_party1_time": ${ format_time(x.delivery_time, format='h:mm a') if x.knows_delivery_method and x.knows_delivery_time else '' }
      
      - "is_delivery_party1_electronic": ${ True if x.knows_delivery_method and ( x.efm_delivery or x.email_delivery ) else '' }
      - "is_delivery_party1_not_electronic": ${ True if x.knows_delivery_method and ( x.mail_delivery or x.hand_delivery or x.jail_delivery ) else '' }
      - "delivery_party1_mail_city": ${ x.delivery_mail_city if x.knows_delivery_method and x.mail_delivery else '' }
      - "delivery_party1_mail_state": ${ state_name(x.delivery_mail_state) if x.knows_delivery_method and x.mail_delivery else '' }
      - "delivery_party1_hand_address": ${ x.hand_delivery_address.on_one_line(bare=True) if x.knows_delivery_method and x.hand_delivery else '' }
      - "is_delivery_party1_jail_yes": ${ True if x.knows_delivery_method and x.jail_delivery else '' }
      - "delivery_party1_jail_name": ${ x.delivery_jail_name if x.knows_delivery_method and x.jail_delivery else '' }
      - "is_delivery_party1_end": ${ (delivery_parties.index(x) + 1) == delivery_parties.number() } # true if this is the last delivery party
      - "is_delivery_party2": ${ (delivery_parties.index(x) + 1) < delivery_parties.number() } # true if there are more delivery parties

      - "delivery_party2_name_full": | 
          % if x.second_person.is_represented:
          ${ x.second_person.lawyer.name.full(middle="full") }, (lawyer for ${ x.second_person.name.full(middle="full") })
          % else:
          ${ x.second_person.name.full(middle="full") }
          % endif
      - "delivery_party2_mail_address_on_one_line": ${ x.second_person.address.on_one_line(bare=True) }
      - "delivery_party2_email": ${ x.second_person.delivery_email if x.second_person.knows_delivery_method else '' }
      - "is_delivery_party2_hand_yes": ${ x.second_person.hand_delivery if x.second_person.knows_delivery_method else '' }
      - "is_delivery_party2_mail_yes": ${ x.second_person.mail_delivery if x.second_person.knows_delivery_method else '' }
      - "is_delivery_party2_efm_yes": ${ x.second_person.efm_delivery if x.second_person.knows_delivery_method else '' }
      - "is_delivery_party2_email_yes": ${ x.second_person.email_delivery if x.second_person.knows_delivery_method else '' }
      - "delivery_party2_date": ${ x.second_person.delivery_date if x.second_person.knows_delivery_method and x.second_person.knows_delivery_date else '' }
      - "delivery_party2_time": ${ format_time(x.second_person.delivery_time, format='h:mm a') if x.second_person.knows_delivery_method and x.second_person.knows_delivery_time else '' }
      
      - "is_delivery_party2_electronic": ${ True if x.second_person.knows_delivery_method and ( x.second_person.efm_delivery or x.second_person.email_delivery ) else '' }
      - "is_delivery_party2_not_electronic": ${ True if x.second_person.knows_delivery_method and ( x.second_person.mail_delivery or x.second_person.hand_delivery or x.second_person.jail_delivery ) else '' }
      - "delivery_party2_mail_city": ${ x.second_person.delivery_mail_city if x.second_person.knows_delivery_method and x.second_person.mail_delivery else '' }
      - "delivery_party2_mail_state": ${ state_name(x.second_person.delivery_mail_state) if x.second_person.knows_delivery_method and x.second_person.mail_delivery else '' }
      - "delivery_party2_hand_address": ${ x.second_person.hand_delivery_address.on_one_line(bare=True) if x.second_person.knows_delivery_method and x.second_person.hand_delivery else '' }
      - "is_delivery_party2_jail_yes": ${ True if x.second_person.knows_delivery_method and x.second_person.jail_delivery else '' }
      - "delivery_party2_jail_name": ${ x.second_person.delivery_jail_name if x.second_person.knows_delivery_method and x.second_person.jail_delivery else '' }
---
attachment:
  variable name: jury_request[i]
  name: jury_request
  filename: jury_request
  skip undefined: True
  editable: False
  pdf template file: jury_request.pdf
  fields:
      - "trial_court_county": ${ trial_court.address.county.upper() }
      - "plaintiffs": |
          % if in_re_check:
          ${ in_re_label }
          % else:
          % if user_ask_role == 'plaintiff':
          % if users.number() > 1:
          ${ users[0].name.full(middle="full") }, et al.
          % else:
          ${ users[0].name.full(middle="full") }
          % endif
          % else:
          % if other_parties.number() > 1:
          ${ other_parties[0].name.full(middle="full") }, et al.
          % else:
          ${ other_parties[0].name.full(middle="full") }
          % endif
          % endif
          % endif
      
      - "defendants": |
          % if in_re_check:
          ${ "" }
          % else:
          % if user_ask_role == 'plaintiff':
          ${ other_parties.full_names() } 
          % else:
          ${ users.full_names() }
          % endif
          % endif

      - "user__1": ${ users[0].name.full(middle="full") }
      - "user__2": ${ users[0].name.full(middle="full") }
      - "user__3": ${ users[0].name.full(middle="full") }
      - "user_mail_address_one_line__1": ${ users[0].address.on_one_line(bare=True) }
      - "user_mail_address_one_line__2": ${ users[0].address.on_one_line(bare=True) }
      - "user_phone_number__1": ${ phone_number_formatted(users[0].phone_number) }
      - "user_phone_number__2": ${ phone_number_formatted(users[0].phone_number) }
      - "user_email": ${ users[0].email if users[0].has_email_address else '' }
      - "user_email__2": ${ users[0].email if users[0].has_email_address else '' }
      - "case_number__1": ${ case_number }
      - "case_number__2": ${ case_number }
      - "case_number__3": ${ case_number }
      - "case_number__4": ${ case_number }

      - "plaintiff_cb": ${ user_ask_role == 'plaintiff' }
      - "defendant_cb": ${ user_ask_role == 'defendant' }

      - "jury_six": ${ trial_with == "Judge and six-person jury" }
      - "jury_twelve": ${ trial_with == "Judge and twelve-person jury" }
      
      - "e_sign_name__1": ${ users[0].name.full(middle="full") if e_signature else '' }
      - "e_sign_name__2": ${ users[0].name.full(middle="full") if e_signature else '' }

      - "delivery_party1_name_full": | 
          % if delivery_parties[0].is_represented:
          ${ delivery_parties[0].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[0].name.full(middle="full") })
          % else:
          ${ delivery_parties[0].name.full(middle="full") }
          % endif
      - "delivery_party1_mail_address_on_one_line": ${ delivery_parties[0].address.on_one_line(bare=True) }
      - "delivery_party1_email": ${ delivery_parties[0].delivery_email if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_hand_yes": ${ delivery_parties[0].hand_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_mail_yes": ${ delivery_parties[0].mail_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_efm_yes": ${ delivery_parties[0].efm_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "is_delivery_party1_email_yes": ${ delivery_parties[0].email_delivery if delivery_parties[0].knows_delivery_method else '' }
      - "delivery_party1_date": ${ delivery_parties[0].delivery_date if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_date else '' }
      - "delivery_party1_time": ${ format_time(delivery_parties[0].delivery_time, format='h:mm a') if delivery_parties[0].knows_delivery_method and delivery_parties[0].knows_delivery_time else '' }
      
      - "is_delivery_party1_electronic": ${ True if delivery_parties[0].knows_delivery_method and ( delivery_parties[0].efm_delivery or delivery_parties[0].email_delivery ) else '' }
      - "is_delivery_party1_not_electronic": ${ True if delivery_parties[0].knows_delivery_method and ( delivery_parties[0].mail_delivery or delivery_parties[0].hand_delivery or delivery_parties[0].jail_delivery ) else '' }
      - "delivery_party1_mail_city": ${ delivery_parties[0].delivery_mail_city if delivery_parties[0].knows_delivery_method and delivery_parties[0].mail_delivery else '' }
      - "delivery_party1_mail_state": ${ state_name(delivery_parties[0].delivery_mail_state) if delivery_parties[0].knows_delivery_method and delivery_parties[0].mail_delivery else '' }
      - "delivery_party1_hand_address": ${ delivery_parties[0].hand_delivery_address.on_one_line(bare=True) if delivery_parties[0].knows_delivery_method and delivery_parties[0].hand_delivery else '' }
      - "is_delivery_party1_jail_yes": ${ True if delivery_parties[0].knows_delivery_method and delivery_parties[0].jail_delivery else '' }
      - "delivery_party1_jail_name": ${ delivery_parties[0].delivery_jail_name if delivery_parties[0].knows_delivery_method and delivery_parties[0].jail_delivery else '' }
      - "is_delivery_party1_end": ${ delivery_parties.number() == 1 }
      - "is_delivery_party2": ${ delivery_parties.number() > 1 }

      - "delivery_party2_name_full": | 
          % if delivery_parties[1].is_represented:
          ${ delivery_parties[1].lawyer.name.full(middle="full") }, (lawyer for ${ delivery_parties[1].name.full(middle="full") })
          % else:
          ${ delivery_parties[1].name.full(middle="full") }
          % endif
      - "delivery_party2_mail_address_on_one_line": ${ delivery_parties[1].address.on_one_line(bare=True) }
      - "delivery_party2_email": ${ delivery_parties[1].delivery_email if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_hand_yes": ${ delivery_parties[1].hand_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_mail_yes": ${ delivery_parties[1].mail_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_efm_yes": ${ delivery_parties[1].efm_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "is_delivery_party2_email_yes": ${ delivery_parties[1].email_delivery if delivery_parties[1].knows_delivery_method else '' }
      - "delivery_party2_date": ${ delivery_parties[1].delivery_date if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_date else '' }
      - "delivery_party2_time": ${ format_time(delivery_parties[1].delivery_time, format='h:mm a') if delivery_parties[1].knows_delivery_method and delivery_parties[1].knows_delivery_time else '' }
      
      - "is_delivery_party2_electronic": ${ True if delivery_parties[1].knows_delivery_method and ( delivery_parties[1].efm_delivery or delivery_parties[1].email_delivery ) else '' }
      - "is_delivery_party2_not_electronic": ${ True if delivery_parties[1].knows_delivery_method and ( delivery_parties[1].mail_delivery or delivery_parties[1].hand_delivery or delivery_parties[1].jail_delivery ) else '' }
      - "delivery_party2_mail_city": ${ delivery_parties[1].delivery_mail_city if delivery_parties[1].knows_delivery_method and delivery_parties[1].mail_delivery else '' }
      - "delivery_party2_mail_state": ${ state_name(delivery_parties[1].delivery_mail_state) if delivery_parties[1].knows_delivery_method and delivery_parties[1].mail_delivery else '' }
      - "delivery_party2_hand_address": ${ delivery_parties[1].hand_delivery_address.on_one_line(bare=True) if delivery_parties[1].knows_delivery_method and delivery_parties[1].hand_delivery else '' }
      - "is_delivery_party2_jail_yes": ${ True if delivery_parties[1].knows_delivery_method and delivery_parties[1].jail_delivery else '' }
      - "delivery_party2_jail_name": ${ delivery_parties[1].delivery_jail_name if delivery_parties[1].knows_delivery_method and delivery_parties[1].jail_delivery else '' }

      - "is_additional_proof_delivery_yes": ${ delivery_parties.number() > 2 }
---
############### Review page
id: review screen
event: review_answers
question: |
  Review screen
subquestion: |
  Edit your answers below.
review: 
  - Edit: user_ask_role
    button: |
      % if user_ask_role == "plaintiff":
        **Your role:** Plaintiff or Petitioner
      % else:
        **Your role:** Defendant or Respondent
      % endif
  - Edit: users.revisit
    button: |
      **Your party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in users:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: other_parties.revisit
    button: |
      **The other party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in other_parties:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: in_re_check
    button: |
      **Does the court case have "In re:" in the name?**  
      ${word(yesno(in_re_check))}
  - Edit: in_re_label
    button: |
      **In re:** ${in_re_label}
    show if: in_re_check
  - Edit: 
      - trial_court_index
      - recompute:
        - trial_court
    button: |
      **County where this case is filed:**
      ${ trial_court.address.county }
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   
  - Edit: trial_with
    button: |
      **Trial type:**
      ${ trial_with }
  - Edit: users[0].address.address
    button: |
      **Your address:**
      ${ users[0].address.on_one_line(bare=True) }
  - Edit: users[0].phone_number
    button: |
      **Your phone number:**
      ${ phone_number_formatted(users[0].phone_number) }
  - Edit: users[0].email_notice
    button: |
      **Do you have an email address?**
      ${ word(yesno(users[0].email_notice)) }
  - Edit: users[0].email
    button: |
      **Your email:**
      ${ users[0].email }
    show if: users[0].email_notice
  - Edit: pronouns_none
    button: |
      **What pronouns do you want the court to use?**
      % if pronouns_none:
      None specified
      % else:
      ${ pronouns }
      % endif
  - Edit: other_pronouns
    button: |
      **Other pronouns:**
      ${ other_pronouns }
    show if: pronouns == 'other'
  - Edit: prefix_none
    button: |
      **What prefix do you want the court to use?**
      % if prefix_none:
      None specified
      % else:
      ${ prefix }
      % endif
  - Edit: other_prefix
    button: |
      **Other prefix:**
      ${ other_prefix }
    show if: prefix == 'other'
  - Edit: e_signature
    button: |
      **Do you want to add your e-signature to your forms?**
      ${ word(yesno(e_signature)) }
---
#needs: yes_no_unknown
id: delivery party review screen
continue button field: x.review_delivery
section: Delivery details
generic object: ALIndividual
question: |
  Edit ${ x.name.full(middle="full") }'s information
subquestion: |  
  % if x == users[0]:
  Edit your address, phone number, and email address in the [**About you**](${ url_action('section_about_you') }) section.
  % else:
  If you don't see lawyer, address, or delivery information, then it might not be entered yet. Continue the program to answer all the questions.
  % endif
review: 
  - Edit: x.name.first
    button: |
      **Party name:**
      ${ x.name.full(middle="full")  }
  - Edit: x.is_represented
    button: |
      **Does ${ x.name.full(middle="full") } have a lawyer?**
      % if x.is_represented is None:
      I don't know
      % else:
      ${ word(yesno(x.is_represented)) }
      % endif
  - Edit: x.lawyer.name.first
    button: |
      **Lawyer name:**
      ${ x.lawyer.name.full(middle="full") }
    show if: x.is_represented
  - Edit: x.address.address
    button: |
      % if x.is_represented == True:
      **${ x.lawyer.name.full(middle="full") }'s address:**
      % else:
      **${ x.name.full(middle="full") }'s address:**
      % endif
      ${ x.address.on_one_line(bare=True) }
  - Edit: x.knows_delivery_method
    button: |
      **Do you know how you will deliver your forms to them?**
      ${ word(yesno(x.knows_delivery_method)) }
  - Edit: x.hand_delivery
    button: |
      **Delivery by: (Edit to view and change details)**
      
      % if x.efm_delivery == True:
        * E-filing system
      % endif
      % if x.email_delivery == True:
        * Email
      % endif
      % if x.mail_delivery == True:
        * US mail or delivery company
      % endif
      % if x.hand_delivery == True:
        * Hand delivery
      % endif
      % if x.jail_delivery == True:
        * Mail from prison or jail
      % endif
    show if: x.knows_delivery_method
  - Edit: x.delivery_date
    button: |
      **Delivery on:**
      ${ x.delivery_date } at ${ format_time(x.delivery_time, "h:mm a") }
    show if: x.knows_delivery_method
---
id: users review screen
continue button field: users.revisit
section: Case info
question: |
  Edit the ${ user_ask_role }s
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Party, lawyer, address, and delivery info: |
      action_button_html(url_action(row_item.attr_name("review_delivery")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
id: other parties review screen
continue button field: other_parties.revisit
section: Case info
question: |
  % if user_ask_role == "plaintiff":
    Edit the defendants
  % else:
    Edit the plaintiffs
  % endif
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Party, lawyer, address, and delivery info: |
      action_button_html(url_action(row_item.attr_name("review_delivery")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
id: case info review screen
event: section_case_info
section: Case info
question: |
  Case info
subquestion: |
  Edit your answers below.
review: 
  - Edit: user_ask_role
    button: |
      % if user_ask_role == "plaintiff":
        **Your role:** Plaintiff or Petitioner
      % else:
        **Your role:** Defendant or Respondent
      % endif
  - Edit: users.revisit
    button: |
      **Your party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in users:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: other_parties.revisit
    button: |
      **The other party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in other_parties:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: in_re_check
    button: |
      **Does the court case have "In re:" in the name?**  
      ${word(yesno(in_re_check))}
  - Edit: in_re_label
    button: |
      **In re:** ${in_re_label}
    show if: in_re_check
  - Edit: 
      - trial_court_index
      - recompute:
        - trial_court
    button: |
      **County where this case is filed:**
      ${ trial_court.address.county }
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   
  - Edit: trial_with
    button: |
      **Trial type:**
      ${ trial_with }
---
id: delivery info review screen
event: section_delivery
section: Delivery details
question: |
  Delivery details
subquestion: |
  Edit your answers below.
review:
  - Edit: users.revisit
    button: |
      **Your party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in users:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: other_parties.revisit
    button: |
      **The other party: (Edit to change name, lawyer, address, and delivery info)**

      % for my_var in other_parties:
        * ${ my_var.name.full(middle="full") }
      % endfor

---
id: about you review screen
event: section_about_you
section: About you
question: |
  About you
subquestion: |
  Edit your answers below.
review:
  - Edit: users[0].name.first
    button: |
      **Your name:**
      ${ users[0].name.full(middle="full") }
  - Edit: users[0].address.address
    button: |
      **Your address:**
      ${ users[0].address.on_one_line(bare=True) }
  - Edit: users[0].phone_number
    button: |
      **Your phone number:**
      ${ phone_number_formatted(users[0].phone_number) }
  - Edit: users[0].email_notice
    button: |
      **Do you have an email address?**
      ${ word(yesno(users[0].email_notice)) }
  - Edit: users[0].email
    button: |
      **Your email:**
      ${ users[0].email }
    show if: users[0].email_notice
  - Edit: pronouns_none
    button: |
      **What pronouns do you want the court to use?**
      % if pronouns_none:
      None specified
      % else:
      ${ pronouns }
      % endif
  - Edit: other_pronouns
    button: |
      **Other pronouns:**
      ${ other_pronouns }
    show if: pronouns == 'other'
  - Edit: prefix_none
    button: |
      **What prefix do you want the court to use?**
      % if prefix_none:
      None specified
      % else:
      ${ prefix }
      % endif
  - Edit: other_prefix
    button: |
      **Other prefix:**
      ${ other_prefix }
    show if: prefix == 'other'
  - Edit: e_signature
    button: |
      **Do you want to add your e-signature to your forms?**
      ${ word(yesno(e_signature)) }
      